  // Sample inventory data (replace this with dynamic data from the table in your actual page)
  const inventory = [
    { name: 'Item A', quantity: 10 },
    { name: 'Item B', quantity: 20 },
    { name: 'Item C', quantity: 30 },
  ];

  // Function to update the chart data based on inventory
  function updateChartData() {
    const labels = [];
    const data = [];

    inventory.forEach(item => {
      labels.push(item.name);
      data.push(item.quantity);
    });

    return { labels, data };
  }

  // Create the pie chart using Chart.js
  const ctx = document.getElementById('myPieChart').getContext('2d');
  let myPieChart = new Chart(ctx, {
    type: 'pie',
    data: {
      labels: [], // Will be updated dynamically
      datasets: [{
        label: 'Product Inventory Distribution',
        data: [], // Will be updated dynamically
        backgroundColor: [
          'rgba(75, 192, 192, 0.2)',
          'rgba(153, 102, 255, 0.2)',
          'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        tooltip: {
          callbacks: {
            label: function(tooltipItem) {
              return tooltipItem.label + ': ' + tooltipItem.raw + ' units';
            }
          }
        }
      }
    }
  });

  // Function to update the chart with inventory data
  function updateChart() {
    const { labels, data } = updateChartData();
    
    if (labels.length > 0) {
      document.getElementById('empty_animation').style.display = 'none'; // Hide the empty gif
    } else {
      document.getElementById('empty_animation').style.display = 'block'; // Show the empty gif
    }

    // Update chart data
    myPieChart.data.labels = labels;
    myPieChart.data.datasets[0].data = data;
    myPieChart.update();
  }

  // Initialize the chart with current data
  updateChart();

  // Example of adding an item to the inventory
  // You can connect this to your actual inventory table
  function addItemToInventory(name, quantity) {
    inventory.push({ name, quantity });
    updateChart(); // Update the chart when a new item is added
  }

  // Example: adding a new item
  setTimeout(() => {
    addItemToInventory('Item D', 15);
  }, 5000);